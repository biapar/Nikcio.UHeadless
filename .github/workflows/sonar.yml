name: SonarCloud
on:
  push:
    branches: [ v2/contrib, v3/contrib ]
    paths:
      - 'src/**'
      - '.github/workflows/sonar.yml'
  pull_request:
    branches: [ v2/contrib, v3/contrib ]
    paths:
      - 'src/**'
      - '.github/workflows/sonar.yml'
jobs:
  build:
    name: Analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x
      - uses: actions/cache@v3
        id: cache-nuget-uheadless
        with:
          path: |
            ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-uheadless
      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./src
      - name: SonarScanner for .NET 6 with pull request decoration support
        uses: highbyte/sonarscan-dotnet@v2.1.2
        with:
          # The key of the SonarQube project
          sonarProjectKey: nikcio_Nikcio.UHeadless
          # The name of the SonarQube project
          sonarProjectName:  Nikcio.UHeadless
          # The name of the SonarQube organization in SonarCloud. For hosted SonarQube, skip this setting.
          sonarOrganization: nikcio
          # Optional command arguments to dotnet build
          dotnetBuildArguments: ./src
          # Optional command arguments to dotnet test
          dotnetTestArguments: ./src --logger trx --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
          # Optional extra command arguments the the SonarScanner 'begin' command
          sonarBeginArguments: /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" -d:sonar.cs.vstest.reportsPaths="**/TestResults/*.trx"

    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}